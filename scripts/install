#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================
source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================
domain=$YNH_APP_ARG_DOMAIN
path_url=$YNH_APP_ARG_PATH
#siwi launch on boot entfernt
#launch_on_boot=$YNH_APP_ARG_LAUNCH_ON_BOOT
open_webserver_port=$YNH_APP_ARG_OPEN_WEBSERVER_PORT

app=$YNH_APP_INSTANCE_NAME
#=================================================
# GLOBAL VARS
#=================================================
final_path=/var/www/$app

test ! -e "$final_path" || ynh_die "This path already contains a folder"

# Register (book) web path
ynh_webpath_register "$app" "$domain" "$path_url"


#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
ynh_script_progression --message="Storing installation settings..." --time --weight=1

ynh_app_setting_set --app=$app --key=domain --value=$domain
ynh_app_setting_set "$app" domain "$domain"
ynh_app_setting_set "$app" path_url "$path_url"
ynh_app_setting_set "$app" final_path "$final_path"
#siwi launch on boot entfernt
#ynh_app_setting_set "$app" launch_on_boot "$launch_on_boot"
ynh_app_setting_set "$app" open_webserver_port "$open_webserver_port"

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# FIND AND OPEN A PORT
#=================================================

ynh_script_progression --message="Finding an available port......" --time --weight=1
#siwi check port Behandlung
port=$(ynh_find_port --port=8080)
ynh_app_setting_set --app=$app --key=port --value=$port

if [ "$open_webserver_port" -eq 1 ]
then
    ynh_script_progression --message="Configuring firewall..." --time --weight=1
    ynh_exec_warn_less yunohost firewall allow --no-upnp TCP $port
fi

#=================================================
# CREATE DEDICATED USER
#=================================================
ynh_script_progression --message="Configuring system user..." --time --weight=1
ynh_system_user_create --username="$app" --home_dir="$final_path" --groups="cdrom,audio,video,plugdev,users,dialout,dip,input,netdev"

#ynh_system_user_create "$app" "$final_path"
#mkdir "$final_path"
#chown -R "$app":"$app" "$final_path"
#usermod -a -G cdrom,audio,video,plugdev,users,dialout,dip,input,netdev "$app"

# Create a system user
# s.w. wahrscheinlich geht alles da oben mit dieser Zeile (zu testen, insbesondere user und group von finalpath)

#=================================================
# ADD SYSTEMD CONFIG
#=================================================
#siwi launch on boot entfernt
#ynh_add_systemd_config

#if [ "$launch_on_boot" -eq 0 ]
#then
#    systemctl disable "$app"
#fi

#=================================================
# INSTALL DEPENDENCIES AND KODI
#=================================================
ynh_script_progression --message="Installing Kodi and dependencies..." --time --weight=1
ynh_install_app_dependencies $pkg_dependencies

#=================================================
# NGINX
#=================================================
#finalnginxconf="/etc/nginx/conf.d/$domain.d/$app.conf"
#ynh_backup_if_checksum_is_different "$finalnginxconf"
#cp ../conf/nginx.conf "$finalnginxconf"

#if [ "$path_url" == "/" ]; then
#    ynh_replace_string "__PATH__/" "/" "$finalnginxconf"
#else
#    ynh_replace_string "__PATH__" "$path_url" "$finalnginxconf"
#fi

#ynh_app_setting_set "$app" protected_uris "/"

#domainregex=$(echo "$domain" | sed 's/-/\%&/g')
#ynh_app_setting_set "$app" skipped_regex "$domainregex/jsonrpc.*$,$domainregex/image.*$"


#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring NGINX web server..." --time --weight=1

### `ynh_add_nginx_config` will use the file conf/nginx
ynh_add_nginx_config

#=================================================
# ADD A CONFIGURATION
#=================================================
ynh_script_progression --message="Adding a configuration file..." --time --weight=1
mkdir -p "$final_path/.kodi/userdata/"
ynh_add_config --template="advancedsettings.xml" --destination="$final_path/.kodi/userdata/advancedsettings.xml"

#=================================================
# X11 SETTINGS
#=================================================
#siwi das ist möglicherweise erforderlich für non raspi, wei die die Ausgabe über x-server nutzen
#ynh_replace_string "allowed_users=console" "allowed_users=anybody" /etc/X11/Xwrapper.config

#=================================================
# SETUP SYSTEMD
#=================================================
ynh_script_progression --message="Configuring a systemd service..." --time --weight=1

# Create a dedicated systemd config
ynh_add_systemd_config

#=================================================
# GENERIC FINALIZATION
#=================================================
# SETUP LOGROTATE
#=================================================
ynh_script_progression --message="Configuring log rotation..." --time --weight=1

# Use logrotate to manage application logfile(s)
ynh_use_logrotate

#=================================================
# INTEGRATE SERVICE IN YUNOHOST
#=================================================
ynh_script_progression --message="Integrating service in YunoHost..." --time --weight=1

if [ "$open_webserver_port" -eq 1 ]
then
    yunohost service add $app --description="A short description of the app" --log "$final_path/.kodi/temp/kodi.log" --needs_exposed_ports "$port"
else
    yunohost service add $app --description="A short description of the app" --log "$final_path/.kodi/temp/kodi.log"
fi

#=================================================
# ADVERTISE SERVICE IN ADMIN PANEL
#=================================================
yunohost service add "$app" --log "$final_path/.kodi/temp/kodi.log"

#=================================================
# GENERIC FINALIZATION
#=================================================
#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..." --time --weight=1

ynh_systemd_action --service_name=$app --action="start" --log_path="/var/log/$app/$app.log"

#=================================================
# SETUP SSOWAT
#=================================================
ynh_script_progression --message="Configuring permissions..." --time --weight=1

ynh_app_setting_set --app=$app --key=skipped_uris --value="/"

#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reloading NGINX web server..." --time --weight=1

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed" --time --last
