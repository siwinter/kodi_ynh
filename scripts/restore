#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================
# Keep this path for calling _common.sh inside the execution's context of backup and restore scripts
source ../settings/scripts/_common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# LOAD SETTINGS
#=================================================
app=$YNH_APP_INSTANCE_NAME
domain=$(ynh_app_setting_get "$app" domain)
path_url=$(ynh_app_setting_get "$app" path)
final_path=$(ynh_app_setting_get "$app" final_path)
#siwi launch on boot entfernen
#launch_on_boot=$(ynh_app_setting_get "$app" launch_on_boot)
open_webserver_port=$(ynh_app_setting_get "$app" open_webserver_port)


#=================================================
# CHECK IF THE APP CAN BE RESTORED
#=================================================
ynh_script_progression --message="Validating restoration parameters..." --time --weight=1

test ! -d $final_path \
	|| ynh_die --message="There is already a directory: $final_path "

#=================================================
# STANDARD RESTORATION STEPS
#=================================================
# RESTORE THE NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Restoring the NGINX configuration..." --time --weight=1

ynh_restore_file --origin_path="/etc/nginx/conf.d/$domain.d/$app.conf"

#=================================================
# RECREATE THE DEDICATED USER
#=================================================
ynh_script_progression --message="Recreating the dedicated system user..." --time --weight=1

ynh_system_user_create --username="$app" --home_dir="$final_path" --groups="cdrom,audio,video,plugdev,users,dialout,dip,input,netdev"

#=================================================
# RESTORE THE APP MAIN DIR
#=================================================
ynh_script_progression --message="Restoring the app main directory..." --time --weight=1

ynh_restore_file --origin_path="$final_path"

#=================================================
# SPECIFIC RESTORATION
#=================================================
# OPEN PORT
#=================================================

if [ "$open_webserver_port" -eq 1 ]
then
    ynh_script_progression --message="Configuring firewall..." --time --weight=1
    ynh_exec_warn_less yunohost firewall allow --no-upnp TCP $port
fi

#=================================================
# X11 SETTINGS
#=================================================
#siwi das ist möglicherweise erforderlich für non raspi, wei die die Ausgabe über x-server nutzen
#ynh_replace_string "allowed_users=console" "allowed_users=anybody" /etc/X11/Xwrapper.config

#=================================================
# INSTALL DEPENDENCIES AND KODI
#=================================================
ynh_script_progression --message="Installing Kodi and dependencies..." --time --weight=1
ynh_install_app_dependencies $pkg_dependencies

#=================================================
# RESTORE SYSTEMD
#=================================================
ynh_script_progression --message="Restoring the systemd configuration..." --time --weight=1

ynh_restore_file --origin_path="/etc/systemd/system/$app.service"
systemctl enable $app.service --quiet

#=================================================
# RESTORE THE LOGROTATE CONFIGURATION
#=================================================
#siwi logrotate fehlt im Backup 
#ynh_script_progression --message="Restoring the logrotate configuration..." --time --weight=1

#ynh_restore_file --origin_path="/etc/logrotate.d/$app"

#=================================================
# INTEGRATE SERVICE IN YUNOHOST
#=================================================
ynh_script_progression --message="Integrating service in YunoHost..." --time --weight=1

if [ "$open_webserver_port" -eq 1 ]
then
    yunohost service add $app --description="A short description of the app" --log "$final_path/.kodi/temp/kodi.log" --needs_exposed_ports "$port"
else
    yunohost service add $app --description="A short description of the app" --log "$final_path/.kodi/temp/kodi.log"
fi


#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..." --time --weight=1

ynh_systemd_action --service_name=$app --action="start" --log_path="/var/log/$app/$app.log"

#=================================================
# GENERIC FINALIZATION
#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reloading NGINX web server..." --time --weight=1

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================
ynh_script_progression --message="Restoration completed for $app" --time --last
